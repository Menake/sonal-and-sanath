// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

enum Status {
    ATTENDING
    NOTATTENDING
    NORESPONSE
}

enum EventType {
    HINDU_CEREMONY
    PORUWA_AND_RECEPTION
}

enum ResponseStage {
    HINDU_CEREMONY
    RECEPTION
    RECEPTION_TRANSPORT
    RECEPTION_DIETARY
}

model Venue {
    id      String  @id @default(cuid())
    name    String
    address String
    Event   Event[]
}

model Event {
    id                 String             @id @default(cuid())
    name               String
    date               DateTime
    venue              Venue              @relation(fields: [venueId], references: [id])
    venueId            String
    dressCode          String
    invitations        Invitation[]
    guestStatus        GuestEventStatus[]
    transportAvailable Boolean            @default(false)
    eventType          EventType
    rsvps              EventRsvp[]

    @@index([venueId])
}

model Invitation {
    id            String        @id @default(cuid())
    addressedTo   String
    responseStage ResponseStage @default(HINDU_CEREMONY)
    events        Event[]
    guests        Guest[]
    rsvps         EventRsvp[]
}

model Guest {
    id           String             @id @default(cuid())
    name         String
    status       Status             @default(NORESPONSE)
    invitation   Invitation         @relation(fields: [invitationId], references: [id])
    invitationId String
    eventStatus  GuestEventStatus[]
    rsvps        GuestRsvp[]

    @@index([invitationId])
}

model GuestEventStatus {
    guestId String
    guest   Guest  @relation(fields: [guestId], references: [id])

    eventId String
    event   Event  @relation(fields: [eventId], references: [id])

    status            Status  @default(NORESPONSE)
    requiresTransport Boolean @default(false)

    @@id([guestId, eventId])
    @@index([guestId])
    @@index([eventId])
}

model EventRsvp {
    id String @id @default(cuid())

    invitation   Invitation @relation(fields: [invitationId], references: [id])
    invitationId String

    eventId String
    event   Event       @relation(fields: [eventId], references: [id])
    guests  GuestRsvp[]

    transportSeats           Int     @default(0)
    transportPickupLocation  String?
    transportDropOffLocation String?

    @@index([eventId])
    @@index([invitationId])
}

model GuestRsvp {
    guestId String
    guest   Guest  @relation(fields: [guestId], references: [id])

    eventRsvpId String
    eventRsvp   EventRsvp @relation(fields: [eventRsvpId], references: [id])

    status Status @default(NORESPONSE)

    @@id([guestId, eventRsvpId])
    @@index([eventRsvpId])
    @@index([guestId])
}
